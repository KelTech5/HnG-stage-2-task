# nginx.template.conf
# Template placeholders will be filled by entrypoint script

worker_processes  1;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;

    # upstream definition is produced dynamically to set primary and backup
    upstream backend_pool {
        # PRIMARY_SERVER and BACKUP_SERVER placeholders replaced by entrypoint
        server PRIMARY_SERVER max_fails=1 fail_timeout=3s;  # low max_fails
        server BACKUP_SERVER backup;
    }

    # Fast, strict timeouts and retry policy
    proxy_connect_timeout 1s;
    proxy_send_timeout 5s;
    proxy_read_timeout 5s;

    # If primary fails, retry to backup for the same client request
    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 2;
    proxy_next_upstream_timeout 6s;

    server {
        listen 80;
        location / {
            # proxy pass to the upstream
            proxy_pass http://backend_pool;

            # preserve client and host headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # ensure response headers from upstream are not hidden
            proxy_hide_header X-Powered-By;  # if you want to hide any default one (optional)
            # do NOT hide X-App-Pool or X-Release-Id

            # disable buffering to minimize latency
            proxy_buffering off;

            # ensure long responses still bounded within requirement
            proxy_read_timeout 8s;
        }

        # Optional - expose /version path specifically (same behavior)
        location /version {
            proxy_pass http://backend_pool/version;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 8s;
        }
    }
}
